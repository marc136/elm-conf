/*
  elm-hot creates an additional div wrapper around the app to make HMR possible.
  This could break styling in development mode if you are using Elm UI.

  More context in the issue:
    https://github.com/halfzebra/create-elm-app/issues/320
*/
[data-elm-hot="true"] {
  height: inherit;
}

:root {
  --primary: hsl(210, 33%, 20%);
  --primary-light: hsl(210, 33%, 40%);
  --highlight: white;
  --background: hsl(210, 33%, 70%);
  --video-ratio: 1.3333333;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  margin: 0;
  width: 100vw;
  height: 100vh;
  overflow-x: hidden;
}

* {
  box-sizing: border-box;
}

body,
[data-elm-hot="true"] {
  display: flex;
  justify-content: center;
  align-items: center;
}

.hidden {
  display: none;
}

.feather {
  width: 24px;
  height: 24px;
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: none;
}

.modal {
  --modal-width: 96vw;
  width: var(--modal-width);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 10px;
  background-color: rgba(255, 255, 255, 0.3);
}

.modal video {
  width: 96vw;
}

.modal video {
  width: auto;
  min-width: var(--modal-width);
  height: calc(var(--modal-width) / var(--video-ratio));
  object-fit: cover;
}

@media (min-width:32rem) {
  .modal {
    --modal-width: 30rem;
  }
}

p.with-icon > svg:first-child {
  margin-right: .2em;
  height: 1em;
}

p.with-icon {
  display: flex;
  align-items: center;
}

button {
  border: 1px solid var(--primary-light);
  background-color: var(--primary);
  color: var(--highlight);
  padding: 15px 20px;
  cursor: pointer;
}

button:hover {
  border-color: var(--primary);
  background-color: var(--primary-light);
}

button:focus {
  outline-color: orange;
}

button:disabled,
button[disabled]{
  border: 1px solid #999;
  background-color: #ccc;
  color: #666;
}

button.circle {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 4rem;
  width: 4lh;
  height: 4rem;
  height: 4lh;
  border-radius: 50%;
}

button.circle:focus {
  outline: none;
  box-shadow: 0 0 0 2pt orange;
}

.modal camera-select {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: visible;
}

.modal camera-select select {
  margin: 0.5em 0 0.5em 1em;
}


/* conference view */

.conf {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: calc(var(--box-height) / 20); /* only in Firefox */
}

.conf>.header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  padding: 10px 15px;
  display: flex;
  justify-content: center;
  z-index: 5;
  background: rgba(255, 255, 255, 0.3);
}

.conf>.header::before {
  content: 'aspect-ratio < 4/3';
  position: absolute;
  display: none;
  top: 10px;
  left: 10px;
  background: var(--primary);
  color: white;
  padding: 5px 10px;
}

@media (min-aspect-ratio: 4/3) {
  .conf>.header::before {
    content: 'aspect-ratio >= 4/3';
  }
}

@media (min-aspect-ratio: 16/9) {
  .conf>.header::before {
    content: 'aspect-ratio >= 16/9';
  }
}

.conf.debug>.header::before {
  display: block;
}

.conf {
  --box-height: min(25vh, calc(25vw / var(--video-ratio)));
  --box-width: calc(var(--box-height) * var(--video-ratio));
}

.conf-2,
.conf-3,
.conf-4 {
  --box-height: min(40vh, calc(40vw / var(--video-ratio)));
}

/* aspect ratio should be the same as the --video-ratio */
@media (min-aspect-ratio: 4/3) {
  .conf {
    flex-direction: row;
    --box-width: min(25vw, calc(25vh * var(--video-ratio)));
    --box-height: calc(var(--box-width) / var(--video-ratio));
  }

  .conf-2,
  .conf-3,
  .conf-4 {
    --box-width: min(40vw, calc(40vh * var(--video-ratio)));
  }
}

@media (max-width: 400px) {
  .conf {
    flex-direction: column;
    --box-width: min(90vw, calc(60vh * var(--video-ratio)));
    --box-height: calc(var(--box-width) / var(--video-ratio));
  }
}

.conf-1 {
  --box-width: min(90vw, calc(90vh * var(--video-ratio)));
  --box-height: calc(var(--box-width) / var(--video-ratio));
}

.conf .user-box {
  position: relative;
  width: var(--box-width);
  height: var(--box-height);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  background: var(--primary);
  z-index: 1;
}

.conf webrtc-media .connecting-animation {  
  --width: calc(var(--box-width) * 0.3);
  --height: calc(var(--box-height) * 0.3);

  position: absolute;
  width: var(--width);
  height: var(--height);
  top: calc((var(--box-height) - var(--height)) / 2);
  left: calc((var(--box-width) - var(--width)) / 2);
  animation: rotation 3s infinite linear;
  z-index: 3;
  transition: top 0.7s;
  stroke: white;
}

.conf webrtc-media[view="initial"] video {
  /* will not emit "playing" event in Chrome */
  /* display: none; */
  top: calc(var(--box-height) + 10px);
}

.conf webrtc-media[view="playing"] .connecting-animation {
  top: calc(var(--box-height) + 10px);
  animation: none;
}

.conf .user-box > video {
  max-height: 100%;
  flex: 1 1 auto;
}

.conf webrtc-media > audio {
  position: absolute;
  top: 0;
  width: 100%;
  display: none;
}

.conf webrtc-media:focus > audio,
.conf webrtc-media:hover > audio {
  /* useful if debug = true in webrtc-media.js */
  display: block;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}


.info {
  position: absolute;
  bottom: 0;
  right: 0;
  font-size: 0.7em;
  padding: .5em;
  margin: 0;
  background-color: rgba(255, 255, 255, 0.7);
}
